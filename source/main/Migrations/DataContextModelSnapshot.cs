// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewEnglandClassic.Database;

#nullable disable

namespace NewEnglandClassic.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.Division", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("HandicapBase")
                        .HasColumnType("int");

                    b.Property<decimal?>("HandicapPercentage")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<short?>("MaximumAge")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaximumAverage")
                        .HasColumnType("int");

                    b.Property<int?>("MaximumHandicapPerGame")
                        .HasColumnType("int");

                    b.Property<short?>("MinimumAge")
                        .HasColumnType("smallint");

                    b.Property<int?>("MinimumAverage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<short>("Number")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.Squad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Complete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxPerPair")
                        .HasColumnType("int");

                    b.Property<int>("SquadType")
                        .HasColumnType("int");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Squads", (string)null);

                    b.HasDiscriminator<int>("SquadType");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.SweeperDivision", b =>
                {
                    b.Property<Guid>("SweeperId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("BonusPinsPerGame")
                        .HasColumnType("int");

                    b.HasKey("SweeperId", "DivisionId");

                    b.HasIndex("DivisionId");

                    b.ToTable("SweeperDivision");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BowlingCenter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("CashRatio")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<bool>("Completed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("EntryFee")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("FinalsRatio")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<short>("Games")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.SweeperSquad", b =>
                {
                    b.HasBaseType("NewEnglandClassic.Database.Entities.Squad");

                    b.Property<decimal>("CashRatio")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<decimal>("EntryFee")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<short>("Games")
                        .HasColumnType("smallint");

                    b.HasIndex("TournamentId");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.TournamentSquad", b =>
                {
                    b.HasBaseType("NewEnglandClassic.Database.Entities.Squad");

                    b.HasIndex("TournamentId");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.Division", b =>
                {
                    b.HasOne("NewEnglandClassic.Database.Entities.Tournament", "Tournament")
                        .WithMany("Divisions")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.SweeperDivision", b =>
                {
                    b.HasOne("NewEnglandClassic.Database.Entities.Division", "Division")
                        .WithMany("Sweepers")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewEnglandClassic.Database.Entities.SweeperSquad", "Sweeper")
                        .WithMany("Divisions")
                        .HasForeignKey("SweeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Sweeper");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.SweeperSquad", b =>
                {
                    b.HasOne("NewEnglandClassic.Database.Entities.Tournament", "Tournament")
                        .WithMany("Sweepers")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.TournamentSquad", b =>
                {
                    b.HasOne("NewEnglandClassic.Database.Entities.Tournament", "Tournament")
                        .WithMany("Squads")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.Division", b =>
                {
                    b.Navigation("Sweepers");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.Tournament", b =>
                {
                    b.Navigation("Divisions");

                    b.Navigation("Squads");

                    b.Navigation("Sweepers");
                });

            modelBuilder.Entity("NewEnglandClassic.Database.Entities.SweeperSquad", b =>
                {
                    b.Navigation("Divisions");
                });
#pragma warning restore 612, 618
        }
    }
}
